# search-malware.ps1
# Basic script to search for signs of malware

Write-Host "🔍 Starting basic malware search..." -ForegroundColor Cyan

# 1. Check recent Windows Defender detections
Write-Host "`n🛡️ Checking Windows Defender logs..." -ForegroundColor Yellow
Get-MpThreatDetection | Select-Object ThreatName, ActionSuccess, InitialDetectionTime

# 2. Scan common malware persistence locations
Write-Host "`n📂 Scanning startup and run keys..." -ForegroundColor Yellow
$registryPaths = @(
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\Run",
    "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce",
    "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce"
)

foreach ($path in $registryPaths) {
    if (Test-Path $path) {
        Get-ItemProperty $path | ForEach-Object {
            $_.PSObject.Properties | Where-Object { $_.Name -ne "PSPath" } | Select-Object Name, Value
        }
    }
}

# 3. Search suspicious file types in user directories
Write-Host "`n📁 Looking for suspicious scripts in user directories..." -ForegroundColor Yellow
$suspiciousExtensions = "*.ps1","*.vbs","*.js","*.bat","*.exe"
$locations = @(
    "$env:USERPROFILE\Downloads",
    "$env:USERPROFILE\Documents",
    "$env:USERPROFILE\AppData\Local\Temp"
)

foreach ($location in $locations) {
    foreach ($ext in $suspiciousExtensions) {
        Get-ChildItem -Path $location -Recurse -Include $ext -ErrorAction SilentlyContinue | 
        Select-Object FullName, LastWriteTime
    }
}

# 4. Look for network connections from unusual executables
Write-Host "`n🌐 Checking active network connections..." -ForegroundColor Yellow
Get-NetTCPConnection | Where-Object { $_.State -eq "Established" } | 
ForEach-Object {
    $proc = Get-Process -Id $_.OwningProcess -ErrorAction SilentlyContinue
    [PSCustomObject]@{
        RemoteAddress = $_.RemoteAddress
        RemotePort    = $_.RemotePort
        ProcessName   = $proc.Name
        PID           = $_.OwningProcess
    }
}

Write-Host "`n✅ Scan complete." -ForegroundColor Green
